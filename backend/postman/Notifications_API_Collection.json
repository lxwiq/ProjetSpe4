{
  "info": {
    "_postman_id": "b2c3d4e5-f6g7-8901-hijk-lm2345678901",
    "name": "Notifications API Collection",
    "description": "Collection pour tester les fonctionnalités de notifications",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentification",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data.user).to.have.property('id');",
                  "    pm.expect(jsonData.data.user).to.have.property('username');",
                  "});",
                  "",
                  "// Stocker le token pour les requêtes suivantes",
                  "pm.environment.set(\"userToken\", jsonData.data.token);",
                  "pm.environment.set(\"testUserId\", jsonData.data.user.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "login"
              ]
            },
            "description": "Connexion avec un compte utilisateur standard"
          },
          "response": []
        }
      ],
      "description": "Authentification pour obtenir un token"
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Récupérer les notifications",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});",
                  "",
                  "// Si des notifications existent, stocker l'ID de la première pour les tests suivants",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.length > 0) {",
                  "    pm.environment.set(\"notificationId\", jsonData[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications"
              ]
            },
            "description": "Récupère toutes les notifications de l'utilisateur"
          },
          "response": []
        },
        {
          "name": "Récupérer les notifications non lues",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"All notifications are unread\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var allUnread = true;",
                  "    ",
                  "    for (var i = 0; i < jsonData.length; i++) {",
                  "        if (jsonData[i].is_read) {",
                  "            allUnread = false;",
                  "            break;",
                  "        }",
                  "    }",
                  "    ",
                  "    pm.expect(allUnread).to.be.true;",
                  "});",
                  "",
                  "// Si des notifications non lues existent, stocker l'ID de la première pour les tests suivants",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.length > 0) {",
                  "    pm.environment.set(\"notificationId\", jsonData[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications?unreadOnly=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications"
              ],
              "query": [
                {
                  "key": "unreadOnly",
                  "value": "true"
                }
              ]
            },
            "description": "Récupère uniquement les notifications non lues de l'utilisateur"
          },
          "response": []
        },
        {
          "name": "Récupérer les notifications en attente",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/pending",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications",
                "pending"
              ]
            },
            "description": "Récupère les notifications en attente (non envoyées)"
          },
          "response": []
        },
        {
          "name": "Marquer une notification comme lue",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Notification is marked as read\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('is_read');",
                  "    pm.expect(jsonData.is_read).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/{{notificationId}}/read",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications",
                "{{notificationId}}",
                "read"
              ]
            },
            "description": "Marque une notification spécifique comme lue"
          },
          "response": []
        },
        {
          "name": "Marquer toutes les notifications comme lues",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('notifications marquées comme lues');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/read-all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications",
                "read-all"
              ]
            },
            "description": "Marque toutes les notifications de l'utilisateur comme lues"
          },
          "response": []
        },
        {
          "name": "Supprimer une notification",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('supprimée avec succès');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/{{notificationId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "notifications",
                "{{notificationId}}"
              ]
            },
            "description": "Supprime une notification spécifique"
          },
          "response": []
        }
      ],
      "description": "Tests des fonctionnalités de notifications"
    }
  ]
}
