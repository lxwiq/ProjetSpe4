{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Messaging API Collection",
    "description": "Collection pour tester les fonctionnalités de messagerie",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentification",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data.user).to.have.property('id');",
                  "    pm.expect(jsonData.data.user).to.have.property('username');",
                  "});",
                  "",
                  "// Stocker le token pour les requêtes suivantes",
                  "pm.environment.set(\"userToken\", jsonData.data.token);",
                  "pm.environment.set(\"testUserId\", jsonData.data.user.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "login"
              ]
            },
            "description": "Connexion avec un compte utilisateur standard"
          },
          "response": []
        }
      ],
      "description": "Authentification pour obtenir un token"
    },
    {
      "name": "Messagerie",
      "item": [
        {
          "name": "Récupérer les conversations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});",
                  "",
                  "// Si des conversations existent, stocker l'ID de la première pour les tests suivants",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.length > 0) {",
                  "    pm.environment.set(\"conversationId\", jsonData[0].id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations"
              ]
            },
            "description": "Récupère toutes les conversations de l'utilisateur"
          },
          "response": []
        },
        {
          "name": "Créer une conversation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has conversation data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "});",
                  "",
                  "// Stocker l'ID de la conversation pour les tests suivants",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"conversationId\", jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"participantIds\": [2],\n    \"name\": \"Test Conversation\",\n    \"isGroup\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations"
              ]
            },
            "description": "Crée une nouvelle conversation"
          },
          "response": []
        },
        {
          "name": "Récupérer une conversation par ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has conversation data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "    pm.expect(jsonData).to.have.property('conversation_participants');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations/{{conversationId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations",
                "{{conversationId}}"
              ]
            },
            "description": "Récupère les détails d'une conversation spécifique"
          },
          "response": []
        },
        {
          "name": "Récupérer les messages d'une conversation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations/{{conversationId}}/messages?limit=50&offset=0",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations",
                "{{conversationId}}",
                "messages"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Récupère les messages d'une conversation spécifique"
          },
          "response": []
        },
        {
          "name": "Envoyer un message",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has message data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('sender_id');",
                  "    pm.expect(jsonData).to.have.property('conversation_id');",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"Ceci est un message de test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations/{{conversationId}}/messages",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations",
                "{{conversationId}}",
                "messages"
              ]
            },
            "description": "Envoie un message dans une conversation"
          },
          "response": []
        },
        {
          "name": "Ajouter un participant",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has participant data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('user_id');",
                  "    pm.expect(jsonData).to.have.property('conversation_id');",
                  "    pm.expect(jsonData).to.have.property('is_active');",
                  "    pm.expect(jsonData.is_active).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations/{{conversationId}}/participants",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations",
                "{{conversationId}}",
                "participants"
              ]
            },
            "description": "Ajoute un participant à une conversation de groupe"
          },
          "response": []
        },
        {
          "name": "Quitter une conversation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.include('quitté la conversation');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/messaging/conversations/{{conversationId}}/participants",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "messaging",
                "conversations",
                "{{conversationId}}",
                "participants"
              ]
            },
            "description": "Quitte une conversation"
          },
          "response": []
        }
      ],
      "description": "Tests des fonctionnalités de messagerie"
    }
  ]
}
